{
	"SERVER":{"nativeFunctions":[{"name":"NSEarlyWritePlayerIndexPersistenceForLeave","returnType":32,"helpText":"","argTypes":"int playerIndex","returnTypeString":"void"},
{"name":"NSIsWritingPlayerPersistence","returnType":6,"helpText":"","argTypes":"","returnTypeString":"bool"},
{"name":"NSIsPlayerIndexLocalPlayer","returnType":6,"helpText":"","argTypes":"int playerIndex","returnTypeString":"bool"},
{"name":"NSIsDedicated","returnType":6,"helpText":"","argTypes":"","returnTypeString":"bool"},
{"name":"NSSendMessage","returnType":32,"helpText":"","argTypes":"int playerIndex, string text, bool isTeam","returnTypeString":"void"},
{"name":"NSBroadcastMessage","returnType":32,"helpText":"","argTypes":"int fromPlayerIndex, int toPlayerIndex, string text, bool isTeam, bool isDead, int messageType","returnTypeString":"void"},
{"name":"VPKNotifyFile","returnType":0,"helpText":"Tells the file system that a file at the exact path provided must exist in the currently loading VPK."},
{"name":"GetPlayerSettingsFieldForClassName","returnType":32,"helpText":"Returns the value for the requested field from the corresponding .set file.","argTypes":"( \"className\", \"fieldName\" )","returnTypeString":"var","shortArgTypes":".ss."},
{"name":"GetPlayerSettingsFieldForClassName_Health","returnType":1,"helpText":"Returns the value for the default health field from the corresponding .set file.","argTypes":"string className","returnTypeString":"float","shortArgTypes":".s"},
{"name":"GetPlayerSettingsFieldForClassName_HealthShield","returnType":1,"helpText":"Returns the value for the default health shield field from the corresponding .set file.","argTypes":"string className","returnTypeString":"float","shortArgTypes":".s"},
{"name":"GetPlayerSettingsFieldForClassName_HealthDoomed","returnType":1,"helpText":"Returns the value for the default health doomed field from the corresponding .set file.","argTypes":"string className","returnTypeString":"float","shortArgTypes":".s"},
{"name":"GetPlayerSettingsFieldForClassName_HealthPerSegment","returnType":1,"helpText":"","argTypes":"string className","returnTypeString":"float","shortArgTypes":".s"},
{"name":"GetSettingsForPlayer_DodgeTable","returnType":38,"helpText":"Returns a table with all the dodge related active settings for a given player","argTypes":"player","returnTypeString":"table","shortArgTypes":".."},
{"name":"PlayerSettingsNameToIndex","returnType":5,"helpText":"Returns unique index for the given player class name"},
{"name":"PlayerSettingsIndexToName","returnType":33,"helpText":"Returns name of the player class assigned to the given index"},
{"name":"GetPlayerSettingsAssetForClassName","returnType":40,"helpText":"Returns the value for the requested field from the corresponding .set file.","argTypes":"string classname, string fieldname","returnTypeString":"asset"},
{"name":"IsServer","returnType":6,"helpText":"Returns true if this is server script"},
{"name":"IsClient","returnType":6,"helpText":"Returns true if this is client script"},
{"name":"IsUI","returnType":6,"helpText":"Returns true if this is UI script"},
{"name":"IsToolsMode","returnType":6,"helpText":"Returns true if the game was launched with \"-tools\"."},
{"name":"IsFNF","returnType":6,"helpText":"Returns true if the game was launched with \"-fnf\"."},
{"name":"IsQA","returnType":6,"helpText":"Returns true if the game was launched with \"-qa\"."},
{"name":"Dev_CommandLineHasParm","returnType":6,"helpText":"Returns true if the game was launched with the specified parameter."},
{"name":"Dev_CommandLineParmValue","returnType":33,"helpText":"Returns the string following the parameter if it exists."},
{"name":"Dev_CommandLineRemoveParm","returnType":0,"helpText":"Removes parameter from the command line. Useful if you want a command line parameter to only be effective once."},
{"name":"Dev_CommandLineAddParm","returnType":0,"helpText":"Adds parameter to the command line. Useful to change code/scrip the command line. Pass in the key and value."},
{"name":"NativeFuncTest","returnType":5,"helpText":"empty function: takes int, bool, float, returns 1"},
{"name":"GetDeveloperLevel","returnType":5,"helpText":"Gets the level of 'developer'"},
{"name":"GetBugReproNum","returnType":5,"helpText":"Gets the integer value of the 'bug_reproNum' convar"},
{"name":"AngleNormalize","returnType":1,"helpText":"Wraps given angle to [-180, 180] range"},
{"name":"CalcRelativeVector","returnType":3,"helpText":"Given an absolute angle and absolute direction vector, returns a local direction vector; one that is relative to the absolute angle's axes"},
{"name":"CalcRelativeAngles","returnType":3,"helpText":"Given an angle and vector, returns the angular difference needed to face from the given angle to the given vector"},
{"name":"BoxIntersectsBox","returnType":6,"helpText":"Given an angle and vector, returns the angular difference needed to face from the given angle to the given vector"},
{"name":"TriggerBreakpoint","returnType":0,"helpText":"For debugging"},
{"name":"SpamLog","returnType":0,"helpText":"Prints to the game's spam logfile (usually stored in DevNet).","argTypes":"( string )","returnTypeString":"void","shortArgTypes":".s"},
{"name":"PerfInitLabel","returnType":0,"helpText":"Initialize profile entry with name."},
{"name":"PerfStart","returnType":0,"helpText":"Start timer for profile entry."},
{"name":"PerfEnd","returnType":0,"helpText":"End the timer for profile entry."},
{"name":"PerfClearAll","returnType":0,"helpText":"Clear all data"},
{"name":"PerfReset","returnType":0,"helpText":"Reset just the timing data, keep labels."},
{"name":"PerfDump","returnType":0,"helpText":"Print profile data."},
{"name":"RProfStart","returnType":0,"helpText":"Start rpof timer for index."},
{"name":"RProfEnd","returnType":0,"helpText":"End rpof timer for index."},
{"name":"TimerStart","returnType":0,"helpText":"Start a timer.  Use TimerEnd to get the elapsed time.  Only one Timer can be active at a time."},
{"name":"TimerEnd","returnType":1,"helpText":"End the timer started with TimerStart.  Return milliseconds since TimerStart was called.  Only one Timer can be active at a time."},
{"name":"clamp","returnType":1,"helpText":"Returns first parameter clamped between first and second parameter."},
{"name":"Interpolate","returnType":1,"helpText":"Interpolate with cubic hermite during ease-in and ease-out times","argTypes":"startTime, moveTime, easeIn, easeOut","returnTypeString":"float","shortArgTypes":".nnnn"},
{"name":"LerpVector","returnType":3,"helpText":"Linearly interpolate between two vectors","argTypes":"vecFrom, vecTo, percent","returnTypeString":"vector","shortArgTypes":".vvn"},
{"name":"GetRandom3DPointIn2DCircle","returnType":3,"helpText":"Get a random 2d point in a circle, as a 3d point, with optional 3d base","argTypes":"radius, base3D_or_null","returnTypeString":"vector","shortArgTypes":".n."},
{"name":"Graph","returnType":1,"helpText":"Map a value V from C to D. Linier interpolate between A and B mapped to C and D"},
{"name":"GraphCapped","returnType":1,"helpText":"Map a value V from C to D. If V <= A, result = C. If V >= B, result = D. Otherwise linearly interpolate between A and B mapped to C and D"},
{"name":"GraphCappedVector","returnType":3,"helpText":"Map a value V from Vector C to Vector D. If V <= A, result = C. If V >= B, result = D. Otherwise linearly interpolate between A and B mapped to C and D"},
{"name":"Smooth01","returnType":1,"helpText":"Remap [0,1] to a cosine curved [0,1]"},
{"name":"SmoothCD","returnType":35,"helpText":"Interpolate between values, preserving velocity (so it is smooth)"},
{"name":"SmoothCDVector","returnType":35,"helpText":"Interpolate between values, preserving velocity (so it is smooth)"},
{"name":"ReloadingScriptsBegin","returnType":0,"helpText":"Call before reloading scripts"},
{"name":"ReloadingScriptsEnd","returnType":0,"helpText":"Call after reloading scripts"},
{"name":"CodeWarning","returnType":0,"helpText":"Print string that code uses for errors."},
{"name":"Dev_GetPlayerSettingByKeyField_Global","returnType":35,"helpText":"Slow dev ONLY. Given a player setting name and key, resolves a string key to its value in that setting info file"},
{"name":"Dev_GetAISettingByKeyField_Global","returnType":35,"helpText":"Slow dev ONLY. Given a player setting name and key, resolves a string key to its value in that setting info file"},
{"name":"Dev_GetPlayerSettingAssetByKeyField_Global","returnType":40,"helpText":"Slow dev ONLY. Given a player setting name and key, resolves a string key to its asset value in that setting info file"},
{"name":"Dev_GetAISettingAssetByKeyField_Global","returnType":40,"helpText":"Slow dev ONLY. Given a player setting name and key, resolves a string key to its asset value in that setting info file"},
{"name":"GetWeaponInfoFileKeyField_Global","returnType":35,"helpText":"Given a weapon name and key, resolves a string key to its value in that weapons info file. Assumes no mods set."},
{"name":"GetWeaponInfoFileKeyField_WithMods_Global","returnType":35,"helpText":"Given a weapon name, a list of weapon mods to apply, and key, returns the value of that field in that weapons info file.","argTypes":"string weaponName, array< string > modArray, string key","returnTypeString":"var"},
{"name":"GetWeaponMods_Global","returnType":35,"helpText":"Given a weapon name, returns a list of the mods available on that weapon","argTypes":"string weaponName","returnTypeString":"array< string >"},
{"name":"SetBodyGroupsForWeaponConfig","returnType":0,"helpText":"","argTypes":"entity ent, string weaponName, array< string > modArray","returnTypeString":"void"},
{"name":"GetWeaponInfoFileKeyFieldAsset_Global","returnType":40,"helpText":"Given a weapon name and key, resolves a string key to its value in that weapons info file. Assumes no mods set.","argTypes":"string weaponname, string key","returnTypeString":"asset"},
{"name":"GetWeaponInfoFileKeyFieldAsset_WithMods_Global","returnType":40,"helpText":"Given a weapon name, a list of weapon mods to apply, and key, returns the value of that field in that weapons info file.","argTypes":"string weaponName, array< string > modArray, string key","returnTypeString":"asset"},
{"name":"GetHitgroupForHitboxOnEntity","returnType":5,"helpText":"Given ( entity, hitboxIndex ) - returns the hitgroup for the hitbox on that entity"},
{"name":"DevP4Checkout","returnType":0,"helpText":"Check out file from P4"},
{"name":"DevP4Add","returnType":0,"helpText":"Add or edit a file to P4"},
{"name":"DevTextBufferWrite","returnType":0,"helpText":"Append string to a temp buffer. Dev only."},
{"name":"DevTextBufferClear","returnType":0,"helpText":"Append string to a temp buffer. Dev only."},
{"name":"DevTextBufferDumpToFile","returnType":6,"helpText":"Dump temp buffer out to specified path/filename."},
{"name":"PersistenceGetEnumCount","returnType":5,"helpText":"Get a count of how many distinct values the given enum has."},
{"name":"PersistenceGetEnumIndexForItemName","returnType":5,"helpText":"Get a count of how many distinct values the given enum has."},
{"name":"PersistenceGetEnumItemNameForIndex","returnType":33,"helpText":"Get a count of how many distinct values the given enum has."},
{"name":"PersistenceEnumValueIsValid","returnType":6,"helpText":"Returns true if the given enum value contains the given value."},
{"name":"PersistenceGetArrayCount","returnType":5,"helpText":"Get a count of how many elements the given item has."},
{"name":"SetXPForLevel","returnType":0,"helpText":"Sets the XP required for a player to get to a certain level"},
{"name":"GetLevelForXP","returnType":5,"helpText":"Gets level for a player with a given amount of XP"},
{"name":"GetConVarString","returnType":33,"helpText":"Gets the value of a convar as a string"},
{"name":"GetConVarInt","returnType":5,"helpText":"Gets the value of a convar as an integer"},
{"name":"GetConVarFloat","returnType":1,"helpText":"Gets the value of a convar as a float"},
{"name":"GetConVarBool","returnType":6,"helpText":"Gets the value of a convar as a boolean"},
{"name":"SetConVarString","returnType":0,"helpText":"Sets the value of a convar with a string"},
{"name":"SetConVarInt","returnType":0,"helpText":"Sets the value of a convar with an integer"},
{"name":"SetConVarFloat","returnType":0,"helpText":"Sets the value of a convar with a float"},
{"name":"SetConVarBool","returnType":0,"helpText":"Sets the value of a convar with a boolean"},
{"name":"SetConVarToDefault","returnType":0,"helpText":"Sets the value of a convar to its internal default value"},
{"name":"IsMagneticTarget","returnType":6,"helpText":"Returns if an entity is a magnetic target"},
{"name":"IsTurret","returnType":6,"helpText":"Is entity a turret"},
{"name":"Script_IsRunningTrialVersion","returnType":6,"helpText":"Only call when we have a active user."},
{"name":"EverythingUnlockedConVarEnabled","returnType":6,"helpText":""},
{"name":"GetUnixTimestamp","returnType":5,"helpText":""},
{"name":"GetDataTable","returnType":32,"helpText":"Gets the given datatable asset","argTypes":"asset datatablepath","returnTypeString":"var"},
{"name":"GetDataTableColumnByName","returnType":32,"helpText":"Finds the column in the datatable with the given name. -1 if none","argTypes":"var datatable, string columnName","returnTypeString":"int"},
{"name":"GetDatatableRowCount","returnType":32,"helpText":"Returns the number of rows in the datatable.","argTypes":"var datatable","returnTypeString":"int"},
{"name":"GetDataTableBool","returnType":32,"helpText":"Gets a bool from the given row/column of a datatable","argTypes":"var datatable, int row, int column","returnTypeString":"bool"},
{"name":"GetDataTableInt","returnType":32,"helpText":"Gets an int from the given row/column of a datatable","argTypes":"var datatable, int row, int column","returnTypeString":"int"},
{"name":"GetDataTableFloat","returnType":32,"helpText":"Gets a float from the given row/column of a datatable","argTypes":"var datatable, int row, int column","returnTypeString":"float"},
{"name":"GetDataTableVector","returnType":32,"helpText":"Gets a vector from the given row/column of a datatable","argTypes":"var datatable, int row, int column","returnTypeString":"vector"},
{"name":"GetDataTableString","returnType":32,"helpText":"Gets a string from the given row/column of a datatable","argTypes":"var datatable, int row, int column","returnTypeString":"string"},
{"name":"GetDataTableAsset","returnType":32,"helpText":"Gets an asset from the given row/column of a datatable","argTypes":"var datatable, int row, int column","returnTypeString":"asset"},
{"name":"GetDataTableRowMatchingBoolValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the bool in the given column matches the given value. -1 if none","argTypes":"var datatable, int column, bool value","returnTypeString":"int"},
{"name":"GetDataTableRowMatchingIntValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the int in the given column matches the given value. -1 if none","argTypes":"var datatable, int column, int value","returnTypeString":"int"},
{"name":"GetDataTableRowLessThanOrEqualToIntValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the int in the given column is less than or equal to the given value. -1 if none","argTypes":"var datatable, int column, int value","returnTypeString":"int"},
{"name":"GetDataTableRowGreaterThanOrEqualToIntValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the int in the given column is greater than or equal to the given value. -1 if none","argTypes":"var datatable, int column, int value","returnTypeString":"int"},
{"name":"GetDataTableRowMatchingFloatValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the float in the given column matches the given value. -1 if none","argTypes":"var datatable, int column, float value","returnTypeString":"int"},
{"name":"GetDataTableRowLessThanOrEqualToFloatValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the float in the given column is less than or equal to the given value. -1 if none","argTypes":"var datatable, int column, float value","returnTypeString":"int"},
{"name":"GetDataTableRowGreaterThanOrEqualToFloatValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the float in the given column is greater than or equal to the given value. -1 if none","argTypes":"var datatable, int column, float value","returnTypeString":"int"},
{"name":"GetDataTableRowMatchingVectorValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the vector in the given column matches the given value. -1 if none","argTypes":"var datatable, int column, vector value","returnTypeString":"int"},
{"name":"GetDataTableRowMatchingStringValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the string in the given column matches the given value. -1 if none","argTypes":"var datatable, int column, string value","returnTypeString":"int"},
{"name":"GetDataTableRowMatchingAssetValue","returnType":32,"helpText":"Finds and returns the first row of the datatable for which the asset in the given column matches the given value. -1 if none","argTypes":"var datatable, int column, asset value","returnTypeString":"int"},
{"name":"IsGameFullyInstalled","returnType":6,"helpText":"Returns true if the full game is installed. You can't start mp or any sp map but sp_training and sp_crashsite if this is false.","argTypes":"","returnTypeString":"bool"},
{"name":"IsGamePartiallyInstalled","returnType":6,"helpText":"Returns true if the game is partially installed. You can't start sp training this is false.","argTypes":"","returnTypeString":"bool"},
{"name":"GetGameFullyInstalledProgress","returnType":1,"helpText":"Returns fraction 0.0 to 1.0 of downloading of full game progress.","argTypes":"","returnTypeString":"float"},
{"name":"AABBIntersectsAABB","returnType":6,"helpText":"Check if two OBBs intersect"},
{"name":"OBBIntersectsOBB","returnType":6,"helpText":"Check if two OBBs intersect"},
{"name":"TraceLOSMultiple","returnType":6,"helpText":"Do multiple LOS checks, early out if any return true. Runs on multiple threads","argTypes":"starts array, ends array, ent ignoreEntity, TRACE_MASK_* mask, TRACE_COLLISION_GROUP_* group","returnTypeString":"bool","shortArgTypes":"....ii"},
{"name":"TraceLine","returnType":32,"helpText":"Does a trace and returns struct of result values.","argTypes":"vector startPos, vector endPos, var ignoreEntOrArrayOfEnts = null, int traceMask = 0, int collisionGroup = 0","returnTypeString":"TraceResults"},
{"name":"TraceLineHighDetail","returnType":32,"helpText":"Does a high-detail (per poly on static models) trace and returns struct of result values.","argTypes":"vector startPos, vector endPos, var ignoreEntOrArrayOfEnts = null, int traceMask = 0, int collisionGroup = 0","returnTypeString":"TraceResults"},
{"name":"TraceHull","returnType":32,"helpText":"Does a hull trace and returns table of result values.","argTypes":"vector startPos, vector endPos, vector hullMins, vector hullMaxs, var ignoreEntOrArrayOfEnts = null, int traceMask = 0, int collisionGroup = 0","returnTypeString":"TraceResults"},
{"name":"TraceLineNoEnts","returnType":32,"helpText":"Does a trace and returns table of result values.","argTypes":"vector startPos, vector endPos, int traceMask = 0","returnTypeString":"TraceResults"},
{"name":"TraceLineSimple","returnType":1,"helpText":"given 2 points & ent to ignore, return fraction along line that hits world or models"},
{"name":"TraceHullSimple","returnType":1,"helpText":"given 2 points & ent to ignore, return fraction along hull that hits world or models"},
{"name":"DoTraceCoordCheck","returnType":0,"helpText":"Enable/Disable coordinate check on trace start/end positions"},
{"name":"TraceGetEntsAlongLine","returnType":32,"helpText":"Does a trace a returns all ents along a line","argTypes":"vector startPos, vector endPos, int traceMask = 0, int collisionGroup = 0","returnTypeString":"array< entity >"},
{"name":"CheckPassThroughDir","returnType":6,"helpText":""},
{"name":"IsPointInFrontofLine","returnType":6,"helpText":"Check if point is in front of line defined by point and direction"},
{"name":"FindVisibleEntitiesInCone","returnType":32,"helpText":"Returns an array of entities that are inside of a cone and visible to the apex","argTypes":"vector coneApex, vector coneAxis, float coneHeight, float coneAngleToAxis, array< entity > ignoredEntities, int traceMask, int flags, entity antilagPlayer, entity weapon = null","returnTypeString":"array< VisibleEntityInCone >"},
{"name":"VortexBulletHitCheck","returnType":32,"helpText":"Check for vortexSphere collisions between two points","argTypes":"entity attacker, vector startPos, vector endPos","returnTypeString":"VortexBulletHit ornull"},
{"name":"PrecacheParticleSystem","returnType":5,"helpText":"Precache an effect and returns the particleSystemIndex associated with it.","argTypes":"asset","returnTypeString":"int"},
{"name":"GetParticleSystemIndex","returnType":5,"helpText":"Returns an associated particleSystemIndex, or 0 if none exists.","argTypes":"asset","returnTypeString":"int"},
{"name":"GetParticleSystemName","returnType":33,"helpText":"For development/debugging. Given ( particleSystemIndex ), returns the name of the given particle system, or an empty string if none exists.","argTypes":"int","returnTypeString":"asset"},
{"name":"StartParticleEffectInWorld","returnType":0,"helpText":"Given ( particleSystemIndex, origin, angles ), creates a new effect in the world at the given position/orientation. Unreliable! The effect will not be visible to players who join late, who have a bad connection, or in kill replays that begin after the call."},
{"name":"StartParticleEffectInWorldWithControlPoint","returnType":0,"helpText":"Given ( particleSystemIndex, origin, angles, controlpoint ), creates a new effect in the world at the given position/orientation, and sets control point 1 to the given location. Unreliable! The effect will not be visible to players who join late, who have a bad connection, or in kill replays that begin after the call."},
{"name":"StartParticleEffectInWorld_ReturnEntity","returnType":13,"helpText":"Given ( particleSystemIndex, origin, angles ), creates a new effect in the world at the given position/orientation, and returns an info_particle_system entity. This is more expensive but ensures the effect shows for players joining late and in kill replay. You must destroy the returned entity when you are done with it."},
{"name":"StartParticleEffectOnEntity","returnType":0,"helpText":"Given ( entity, particleSystemIndex, FX_PATTACH_ attachType, attachmentIndex ), creates a new effect owned by the given entity. Unreliable! The effect will not be visible to players who join late, who have a bad connection, or in kill replays that begin after the call."},
{"name":"StartParticleEffectOnEntityWithControlPoint","returnType":0,"helpText":"Given ( entity, particleSystemIndex, FX_PATTACH_ attachType, attachmentIndex, FX_PATTACH_ controlPointAttachType, controlPointAttachmentIndex ), creates a new effect owned by the given entity and sets control point 1. Unreliable! The effect will not be visible to players who join late, who have a bad connection, or in kill replays that begin after the call."},
{"name":"StartParticleEffectOnEntityWithPos","returnType":0,"helpText":"Given ( entity, particleSystemIndex, FX_PATTACH_ attachType, attachmentIndex, position, angles ), creates a new effect owned by the given entity. Unreliable! The effect will not be visible to players who join late, who have a bad connection, or in kill replays that begin after the call."},
{"name":"StartParticleEffectOnEntityWithPosWithControlPoint","returnType":0,"helpText":"Given ( entity, particleSystemIndex, FX_PATTACH_ attachType, attachmentIndex, position, angles, FX_PATTACH_ controlPointAttachType, controlPointAttachmentIndex ), creates a new effect owned by the given entity and sets control point 1. Unreliable! The effect will not be visible to players who join late, who have a bad connection, or in kill replays that begin after the call."},
{"name":"StartParticleEffectOnEntity_ReturnEntity","returnType":13,"helpText":"Given ( entity, particleSystemIndex, FX_PATTACH_ attachType, attachmentIndex ), creates a new effect owned by the given entity, and returns an info_particle_system entity. This is more expensive but ensures the effect shows for players joining late and in kill replay. You must destroy the returned entity when you are done with it."},
{"name":"StartParticleEffectOnEntityWithPos_ReturnEntity","returnType":13,"helpText":"Given ( entity, particleSystemIndex, FX_PATTACH_ attachType, attachmentIndex, position, angles ), creates a new effect owned by the given entity, and returns an info_particle_system entity. This is more expensive but ensures the effect shows for players joining late and in kill replay. You must destroy the returned entity when you are done with it."},
{"name":"EffectStop","returnType":0,"helpText":"Given ( effect entity ), kills an effect, playing the endcap. (Deletes the entity.)"},
{"name":"EffectSleep","returnType":0,"helpText":"Given ( effect entity ), force an effect to hibernate."},
{"name":"EffectWake","returnType":0,"helpText":"Given ( effect entity ), resume an effect that was previously put to sleep."},
{"name":"EffectSetControlPointVector","returnType":0,"helpText":"Given ( effect, controlPointIndex, vector ), sets the xyz of an effect's control point."},
{"name":"EffectSetControlPointAngles","returnType":0,"helpText":"Given ( effect, controlPointIndex, angles ), sets the orientation of an effect's control point."},
{"name":"EffectSetControlPointEntity","returnType":0,"helpText":"Given ( effect, controlPointIndex, entity ), sets the entity assigned to an effect's control point."},
{"name":"EffectAddTrackingForControlPoint","returnType":0,"helpText":"Given ( effect, controlPointIndex, otherEntity, FX_PATTACH_ attachType, attachmentIndex ), adds automatic updating of an effect's control point. Effect must have been created on an entity."},
{"name":"Rodeo_IsAttached","returnType":6,"helpText":"Return true if in rodeo attach"},
{"name":"Rodeo_Detach","returnType":0,"helpText":"End rodeo attach"},
{"name":"Rodeo_Allow","returnType":0,"helpText":"Allow given player to rodeo things"},
{"name":"Rodeo_Disallow","returnType":0,"helpText":"Disallow the player from rodeo things"},
{"name":"Rodeo_IsPreviousEntity","returnType":6,"helpText":"Returns true if the given pilot just rodeoed the given titan."},
{"name":"Rodeo_SetCooldown","returnType":0,"helpText":"Disable rodeo for the next N seconds. N being the rodeoCooldown player setting."},
{"name":"Rodeo_OnFinishClimbOnAnimation","returnType":0,"helpText":"Tell code the rodeo climbing on animation sequence has finished."},
{"name":"Leech_IsLeechable","returnType":6,"helpText":"Mark the entity as able to be leeched"},
{"name":"Leech_SetLeechable","returnType":0,"helpText":"Mark the entity as able to be leeched"},
{"name":"Leech_ClearLeechable","returnType":0,"helpText":"Clear the flag that makes this entity leechable"},
{"name":"Operator_FindFloorHeight","returnType":1,"helpText":"Find what height the given operator should move to"},
{"name":"Operator_DiveEnable","returnType":0,"helpText":"Enable dive mode on the operator"},
{"name":"Operator_DiveDisable","returnType":0,"helpText":"Disable dive mode on the operator"},
{"name":"Operator_IsDiving","returnType":6,"helpText":"Returns true if operator is currently in dive mode"},
{"name":"Operator_ForceDefaultFloorHeight","returnType":0,"helpText":"Force operator to always fly at whatever the default floor height is set to"},
{"name":"Operator_SetDefaultFloorHeight","returnType":0,"helpText":"Set the default floor height value. Used when no operator floor is found"},
{"name":"Operator_IgnoreWorldForMovement","returnType":0,"helpText":"When set, the operator can fly through walls"},
{"name":"Operator_IgnoreWorldForFloorTrace","returnType":0,"helpText":"When set, the operator will only search for the operator floor when calculating what height to hover at"},
{"name":"Operator_MoveGridSizeScale","returnType":0,"helpText":"Adjusts how far out the operator will do searches for surrounding floor. Smaller values will hug the floor closer, but move less smoothly."},
{"name":"Operator_MoveFloorHeightOffset","returnType":0,"helpText":"Once the operator has calculated what height to hover at, this is an additional vertical offset to add to that"},
{"name":"Operator_JumpIsDodge","returnType":0,"helpText":"Pressing jump as the operator will perform a dash rather than a vertical jump"},
{"name":"Operator_SetMaxJumpSpeed","returnType":0,"helpText":"Set maximum the jump speed velocity can ever be"},
{"name":"Operator_SetJumpAcceleration","returnType":0,"helpText":"Set host fast to accelerate up to the maximum jump speed"},
{"name":"PlayerMelee_LungeConeTrace","returnType":13,"helpText":"Do a lunge cone trace returning the target closest to center of screen","argTypes":"entity player, int callback","returnTypeString":"entity"},
{"name":"PlayerMelee_FindVisibleEntitiesInCone","returnType":32,"helpText":"Returns an array of entities that are inside a cone and visible to the player","argTypes":"entity playerTitan","returnTypeString":"array< VisibleEntityInCone >"},
{"name":"PlayerMelee_AttackTrace","returnType":32,"helpText":"Do a trace for potential melee targets in front of player. Returns a table with keys 'entity' and 'position', which is the hit entity and position","argTypes":"entity player, float range, bool functionref( entity attacker, entity target ) isValidTargetFunc","returnTypeString":"table"},
{"name":"PlayerMelee_IsExecutionReachable","returnType":6,"helpText":"Casts a slightly smaller version of the player's bounding box to see if they can reach target"},
{"name":"PlayerMelee_IsServerSideEffects","returnType":6,"helpText":"Returns true if melee effects should be server-side only"},
{"name":"PlayerMelee_StartLagCompensateTarget","returnType":0,"helpText":"Start lag compensation for a specific target only"},
{"name":"PlayerMelee_StartLagCompensateTargetForLunge","returnType":0,"helpText":"Start lag compensation for a lunge for a specific target only"},
{"name":"PlayerMelee_FinishLagCompensateTarget","returnType":0,"helpText":"End lag compensatation"},
{"name":"SmartAmmo_GetMaxTargetedBurst","returnType":5,"helpText":"Returns maximum bursts to fire on a single target"},
{"name":"SmartAmmo_GetTargetingTime","returnType":1,"helpText":"Returns time it will take to lock onto given target"},
{"name":"SmartAmmo_GetTargetMaxLocks","returnType":1,"helpText":"Returns maximum value the lock \"fraction\" can have"},
{"name":"SmartAmmo_IsTrackingEntity","returnType":6,"helpText":"Returns whether the given weapon is tracking the given entity"},
{"name":"SmartAmmo_IsValidTarget","returnType":6,"helpText":"Returns true if this is a valid smart ammo target"},
{"name":"StatusEffect_AddTimed","returnType":5,"helpText":"Adds a status effect that will stop automatically after a given time.","argTypes":"entity ent, int eStatusEffect, float severity01, float duration, float easeOut","returnTypeString":"int"},
{"name":"StatusEffect_AddEndless","returnType":5,"helpText":"Adds a status effect.","argTypes":"entity ent, int eStatusEffect, float severity01","returnTypeString":"int"},
{"name":"StatusEffect_Stop","returnType":6,"helpText":"Stops a status effect given its handle (return value of StatusEffect_AddTimed or StatusEffect_AddEndless).","argTypes":"entity ent, int effectHandle","returnTypeString":"bool"},
{"name":"StatusEffect_StopAll","returnType":5,"helpText":"Stops all status effects of a given type. Returns the number that were stopped.","argTypes":"entity ent, int eStatusEffect","returnTypeString":"int"},
{"name":"StatusEffect_Get","returnType":1,"helpText":"","argTypes":"entity ent, int eStatusEffect","returnTypeString":"float"},
{"name":"StatusEffect_GetAll","returnType":35,"helpText":"","argTypes":"entity ent","returnTypeString":"array< float >"},
{"name":"RegisterNetworkedVariable","returnType":32,"helpText":"Registers a named networked variable.","argTypes":"string name, int SNDC_category, int SNVT_type, var defaultValue = 0, float rangemin = 0, float rangemax = 0","returnTypeString":"void"},
{"name":"GetNetworkedVariableIndex","returnType":32,"helpText":"Gets the internal index used to reference a scripted network variable. For use with FX_PATTACH_SCRIPT_NETWORK_VAR.","argTypes":"string name","returnTypeString":"int"},
{"name":"SetGlobalNetBool","returnType":0,"helpText":"Sets a global bool network variable (see RegisterNetworkedVariable)"},
{"name":"SetGlobalNetInt","returnType":0,"helpText":"Sets a global int network variable (see RegisterNetworkedVariable)"},
{"name":"SetGlobalNetFloat","returnType":0,"helpText":"Sets a global float network variable (see RegisterNetworkedVariable)"},
{"name":"SetGlobalNetFloatOverTime","returnType":0,"helpText":"Sets a global float network variable gradually over time from its current value to the specified new value (see RegisterNetworkedVariable)"},
{"name":"SetGlobalNetTime","returnType":0,"helpText":"Sets a global time (float) network variable (see RegisterNetworkedVariable)"},
{"name":"SetGlobalNetEnt","returnType":0,"helpText":"Sets a global entity network variable (see RegisterNetworkedVariable)"},
{"name":"GetGlobalNetBool","returnType":6,"helpText":"Gets a global bool network variable (see RegisterNetworkedVariable)"},
{"name":"GetGlobalNetInt","returnType":5,"helpText":"Gets an global int network variable (see RegisterNetworkedVariable)"},
{"name":"GetGlobalNetFloat","returnType":1,"helpText":"Gets a global float network variable (see RegisterNetworkedVariable)"},
{"name":"GetGlobalNetTime","returnType":1,"helpText":"Gets a global time (float) network variable (see RegisterNetworkedVariable)"},
{"name":"GetGlobalNetEnt","returnType":13,"helpText":"Gets a global entity network variable (see RegisterNetworkedVariable)"},
{"name":"InPrediction","returnType":6,"helpText":"Returns true if currently in prediction mode"},
{"name":"IsFirstTimePredicted","returnType":6,"helpText":"Returns true if in prediction mode and this is the first time the command is being predicted"},
{"name":"GetMapName","returnType":33,"helpText":"Get the name of the map."},
{"name":"Time","returnType":1,"helpText":"Get the current server time"},
{"name":"FrameTime","returnType":1,"helpText":"Get the time spent on the last frame"},
{"name":"PlatformTime","returnType":1,"helpText":"Get the time since startup."},
{"name":"IntervalPerTick","returnType":1,"helpText":"Get the time between each tick"},
{"name":"FrameCount","returnType":5,"helpText":"","argTypes":"","returnTypeString":"int"},
{"name":"PrecacheWeapon","returnType":0,"helpText":"Precache a weapon."},
{"name":"PrecacheModel","returnType":0,"helpText":"Precache a model.","argTypes":"asset modelFile","returnTypeString":"void"},
{"name":"PrecacheMaterial","returnType":0,"helpText":"Precache a material.","argTypes":"asset","returnTypeString":"void"},
{"name":"ShouldSendDevStats","returnType":6,"helpText":"True if script should send stats to devnet."},
{"name":"PrecacheImpactEffectTable","returnType":5,"helpText":"Precache an impact effect table.","argTypes":"string tableName","returnTypeString":"int"},
{"name":"DebugScreenText","returnType":0,"helpText":"","argTypes":"float posX, float posY, string text","returnTypeString":"void"},
{"name":"DebugDrawBox","returnType":0,"helpText":"Draw a debug overlay box"},
{"name":"DebugDrawLine","returnType":0,"helpText":"Draw a debug overlay line. TRUE means draw through world."},
{"name":"DebugDrawText","returnType":0,"helpText":"Draw debug text. TRUE means draw through world."},
{"name":"IsCriticalHit","returnType":6,"helpText":"Returns true if the given hit is a critical hit"},
{"name":"IsRodeoHitBox","returnType":6,"helpText":"Returns true if the given hitbox is a Rodeo hit box."},
{"name":"SendToConsole","returnType":0,"helpText":"Send a string to the console as a command"},
{"name":"DispatchSpawn","returnType":6,"helpText":"Tells the specified entity to spawn. Should only be called once per entity.","argTypes":"entity","returnTypeString":"bool success","shortArgTypes":".e"},
{"name":"DoEntFire","returnType":0,"helpText":"#EntFire:Queues an entity i/o event"},
{"name":"EntFireNow","returnType":0,"helpText":"@"},
{"name":"EntFireByHandle","returnType":0,"helpText":"Queues an entity i/o event. First parameter is an entity instance."},
{"name":"EntFireByHandleNow","returnType":0,"helpText":"@"},
{"name":"CreateProp","returnType":13,"helpText":"Create a physics prop"},
{"name":"RecordAchievementEvent","returnType":0,"helpText":"Records achievement event or progress"},
{"name":"EmitAISound","returnType":0,"helpText":"Create a sound event that AI can respond to.","argTypes":"int soundFlags, int contextFlags, vector pos, float radius, float duration","returnTypeString":"void"},
{"name":"EmitAISoundWithOwner","returnType":0,"helpText":"Create a sound event that AI can respond to, specifying the owner of the sound.","argTypes":"entity ownerEnt, int soundFlags, int contextFlags, vector pos, float radius, float duration","returnTypeString":"void"},
{"name":"EmitAISoundToTarget","returnType":0,"helpText":"Create a sound event that AI can respond to, specifying who the sound should target.","argTypes":"entity targetEnt, int soundFlags, int contextFlags, vector pos, float radius, float duration","returnTypeString":"void"},
{"name":"EmitAISoundWithOwnerToTarget","returnType":0,"helpText":"Create a sound event that AI can respond to, specifying who the sound should target, and the owner of the sound.","argTypes":"entity ownerEnt, entity targetEnt, int soundFlags, int contextFlags, vector pos, float radius, float duration","returnTypeString":"void"},
{"name":"ServiceEventQueue","returnType":0,"helpText":"@"},
{"name":"IsFastIterationEnabled","returnType":6,"helpText":"True if the 'fast_iteration' convar is enabled."},
{"name":"SetDucking","returnType":0,"helpText":"Set the level of an audio ducking channel"},
{"name":"GetConnectingAndConnectedPlayerArray","returnType":32,"helpText":"Get array of all players, even ones who are connecting","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetPendingClientsCount","returnType":5,"helpText":"Gets a count of the number of clients who are connecting or reserved but do not yet have an entity."},
{"name":"CenterPrintAll","returnType":0,"helpText":"Print a message in center of screen for all clients"},
{"name":"GetImpactEffectTable","returnType":5,"helpText":"Get the index of the given impact effect table."},
{"name":"CalcWeaponDamage","returnType":1,"helpText":"Calculate weapon damage for attacker and victim at given distance"},
{"name":"SetBTLoadoutUnlocked","returnType":0,"helpText":"","argTypes":"int loadoutIndex","returnTypeString":"void"},
{"name":"SetBTLoadoutsUnlockedBitfield","returnType":0,"helpText":"","argTypes":"int unlockBits","returnTypeString":"void"},
{"name":"GetBTLoadoutsUnlockedBitfield","returnType":5,"helpText":"","argTypes":"","returnTypeString":"int"},
{"name":"ReloadScriptCallbacks","returnType":0,"helpText":"Rebinds script callbacks"},
{"name":"IsBTLoadoutUnlocked","returnType":6,"helpText":"","argTypes":"int loadoutIndex","returnTypeString":"bool"},
{"name":"Replay_IsEnabled","returnType":6,"helpText":"Returns true if replays are enabled in code."},
{"name":"GetHealthFrac","returnType":1,"helpText":"Get health/maxhealth"},
{"name":"GetPlayerArray","returnType":32,"helpText":"Get array of all players","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfTeam","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfEnemies","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerArray_Alive","returnType":32,"helpText":"","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfTeam_Alive","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfEnemies_Alive","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerArray_Pilots","returnType":32,"helpText":"","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfTeam_Pilots","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfEnemies_Pilots","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerArray_AlivePilots","returnType":32,"helpText":"","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfTeam_AlivePilots","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerArrayOfEnemies_AlivePilots","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetPlayerDecoyArray","returnType":32,"helpText":"","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetTitanArray","returnType":32,"helpText":"Get array of all titans","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetTitanArrayOfTeam","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetTitanArrayOfEnemies","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetTitanSoulArray","returnType":32,"helpText":"Get array of all titan souls","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetTitanCountForTeam","returnType":5,"helpText":"","argTypes":"int team","returnTypeString":"int"},
{"name":"GetPlayerArrayEx","returnType":32,"helpText":"Get array of all players by class, team, within dist. team -1 for any team, 'any' for any class, otherwise 'titan' or 'pilot', -1 for any dist","argTypes":"string classname, int onSameTeamAsNum, int enemiesOfTeamNum, vector origin, float maxdist","returnTypeString":"array< entity >"},
{"name":"GetTeamPlayerCount","returnType":5,"helpText":"Get the number of players in a team"},
{"name":"GetSurfacePropForEntity","returnType":5,"helpText":"","argTypes":"entity ent","returnTypeString":"int"},
{"name":"GetEntByIndex","returnType":13,"helpText":"Find and returns the entity with the given entity index."},
{"name":"GetNPCArray","returnType":32,"helpText":"Get array of all NPCs","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetNPCArrayOfTeam","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetNPCArrayOfEnemies","returnType":32,"helpText":"","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"GetNPCArrayEx","returnType":32,"helpText":"Get array of all NPCs by class, team, within dist. team -1 for any team, 'any' for any class, -1 for any dist","argTypes":"string classname, int onSameTeamAsNum, int enemiesOfTeamNum, vector origin, float maxdist","returnTypeString":"array< entity >"},
{"name":"GetNPCArrayWithSubclassEx","returnType":32,"helpText":"Get array of all NPCs by class, team, and subclass (array), within dist. team -1 for any team, 'any' for any class, -1 for any dist","argTypes":"string classname, int onSameTeamAsNum, int enemiesOfTeamNum, vector origin, float maxdist, array< int > subclasses","returnTypeString":"array< entity >"},
{"name":"GetNPCArrayByClass","returnType":32,"helpText":"Get array of all NPCs of class","argTypes":"string classname","returnTypeString":"array< entity >"},
{"name":"GetNPCArrayByClassAndSubclass","returnType":32,"helpText":"Get array of all NPCs of class and subclass","argTypes":"string classname, array< int > subclasses","returnTypeString":"array< entity >"},
{"name":"GetProjectileArray","returnType":32,"helpText":"Get array of all projectiles","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetProjectileArrayEx","returnType":32,"helpText":"Get array of all projectiles by class, team, within dist. team -1 for any team, 'any' for any class, -1 for any dist","argTypes":"string classname, int onSameTeamAsNum, int enemiesOfTeamNum, vector origin, float maxdist","returnTypeString":"array< entity >"},
{"name":"IsPlayerSafeFromNPCs","returnType":6,"helpText":"Check if player is safe from NPCs"},
{"name":"IsPlayerSafeFromProjectiles","returnType":6,"helpText":"Check if player would safe from projectiles at a given position"},
{"name":"GetWindowHint","returnType":13,"helpText":"Returns the best window hint. Start position, clearance radius, clearance height, direction, distance, gravity, search margin, ignore ent"},
{"name":"BuildingCubeMaps","returnType":6,"helpText":"Returns true if building cube maps."},
{"name":"IsTestMap","returnType":6,"helpText":"Returns value of IsTestMap from the level's script list .rson file"},
{"name":"ScreenFade","returnType":0,"helpText":"Given (player, r, g, b, a, fadeTime, fadeHold, FFADE_ flags), fade the player's screen."},
{"name":"GetModelViewerList","returnType":32,"helpText":"Returns list of files in scripts/model_viewer_list.txt, which is written by reRun","argTypes":"","returnTypeString":"array< asset >"},
{"name":"Entities_First","returnType":13,"helpText":"Begin an iteration over the list of entities"},
{"name":"Entities_Next","returnType":13,"helpText":"Continue an iteration over the list of entities, providing reference to a previously found entity"},
{"name":"Entities_CreateByClassname","returnType":13,"helpText":"Creates an entity by classname but does not spawn it.  Call DispatchSpawn( ent ) to spawn the entity into the level."},
{"name":"Entities_CreateProjectileByClassname","returnType":13,"helpText":""},
{"name":"Entities_CreateByTemplate","returnType":13,"helpText":"Create an entity based on the named template.  If no template found, returns null."},
{"name":"Entities_CreateByTemplateMultiple","returnType":37,"helpText":"Create zero or more entities from templates that match the given string, and return them as an array. Wildcards allowed.","argTypes":"matchingString","returnTypeString":"array","shortArgTypes":".s"},
{"name":"Entities_CreateByPointTemplates","returnType":37,"helpText":"Create zero or more entities from point-templates that match the given string, and return them as an array. Wildcards allowed.","argTypes":"matchingString, [origin], [angles]","returnTypeString":"array","shortArgTypes":".svv"},
{"name":"Entities_FindByClassname","returnType":13,"helpText":"Find entities by class name. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search"},
{"name":"Entities_FindByName","returnType":13,"helpText":"Find entities by name. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search"},
{"name":"Entities_FindInSphere","returnType":13,"helpText":"Find entities within a radius. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search"},
{"name":"Entities_FindByTarget","returnType":13,"helpText":"Find entities by targetname. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search"},
{"name":"Entities_FindByModel","returnType":13,"helpText":"Find entities by model name. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search"},
{"name":"Entities_FindByNameNearest","returnType":13,"helpText":"Find entities by name nearest to a point."},
{"name":"Entities_FindByNameWithin","returnType":13,"helpText":"Find entities by name within a radius. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search"},
{"name":"Entities_FindByClassnameNearest","returnType":13,"helpText":"Find entities by class name nearest to a point."},
{"name":"Entities_FindByClassnameWithin","returnType":13,"helpText":"Find entities by class name within a radius. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search"},
{"name":"EmitSoundOnEntity","returnType":1,"helpText":"Plays a given sound on the given entity."},
{"name":"EmitSoundOnEntityNoSave","returnType":1,"helpText":"Plays a given sound on the given entity. Doesn't save sound"},
{"name":"EmitSoundOnEntityAfterDelay","returnType":1,"helpText":"Plays the given sound on the given entity after a given number of seconds."},
{"name":"EmitSoundOnEntityOnlyToPlayerWithSeek","returnType":1,"helpText":"Plays the given sound on the given entity only to a given player, seeking the given number of seconds into it."},
{"name":"EmitSoundOnEntityExceptToPlayerWithSeek","returnType":1,"helpText":"Plays the given sound on the given entity except to a given player, seeking the given number of seconds into it."},
{"name":"EmitSoundOnEntityToTeam","returnType":1,"helpText":"Plays a given sound on the given entity only for one team."},
{"name":"EmitSoundOnEntityToEnemies","returnType":1,"helpText":"Plays a given sound on the given entity only for enemies of the given team."},
{"name":"EmitSoundAtPosition","returnType":1,"helpText":"Plays a sound in the world unattached to an entity."},
{"name":"EmitSoundAtPositionOnlyToPlayer","returnType":1,"helpText":"Play a sound in the world only to a given player."},
{"name":"EmitSoundAtPositionExceptToPlayer","returnType":1,"helpText":"Play a sound in the world for everyone except to a specific player."},
{"name":"StopSoundOnEntity","returnType":0,"helpText":"Stops any instances of a certain sound playing on the given entity."},
{"name":"StopSoundAtPosition","returnType":0,"helpText":"Stops any instances of a certain sound playing very near the given position."},
{"name":"FadeOutSoundOnEntity","returnType":0,"helpText":"Fades out a sound over time."},
{"name":"EmitSoundOnEntityOnlyToPlayer","returnType":1,"helpText":"Play a sound on an entity only to a given player."},
{"name":"EmitSoundOnEntityOnlyToPlayerWithFadeIn","returnType":1,"helpText":"Play a sound on an entity only to a given player with a fade in time."},
{"name":"EmitSoundOnEntityExceptToPlayer","returnType":1,"helpText":"Play a sound for everyone except for a specific player."},
{"name":"EmitSoundOnEntityExceptToPlayerNotPredicted","returnType":1,"helpText":"Play a sound for everyone except for a specific player.  Use this version if the player is not hearing a predicted version, but rather a different sound entirely."},
{"name":"DoesAliasExist","returnType":6,"helpText":"Returns whether the given alias exists."},
{"name":"GetSoundTags","returnType":5,"helpText":"Returns int which is ORed together SOUNDTAG_* values for this sound (from scripts/audio/metadata_tags.rson)"},
{"name":"SetRapidShiftOffset","returnType":0,"helpText":"Specifies a player-shift offset to a location to also test sound radii against. (0 0 0 is disabled)"},
{"name":"GrantClientSidePickup_MatchCandy","returnType":0,"helpText":"","argTypes":"entity playerEnt, int amount, vector origin, int flags, int recieptID","returnTypeString":"void"},
{"name":"GetAISettingHullType","returnType":5,"helpText":"","argTypes":"string aiSettingsName","returnTypeString":"int"},
{"name":"GetApproxClosestHitboxToRay","returnType":3,"helpText":"Given (ent, rayStart, rayDir), return an approximate point closest to the ray, based on hitbox centers."},
{"name":"SendHudMessage","returnType":0,"helpText":"Send a HUD message to the given player.","argTypes":"player, text, xPos, yPos, r1, g1, b1, a1, r2, g2, b2, a2, fadeTimeIn, holdTime, fadeTimeOut","returnTypeString":"","shortArgTypes":"..snniiiinnn"},
{"name":"SendHudMessageToAll","returnType":0,"helpText":"Send a HUD message to the given player.","argTypes":"player, text, xPos, yPos, r1, g1, b1, a1, r2, g2, b2, a2, fadeTimeIn, holdTime, fadeTimeOut","returnTypeString":"","shortArgTypes":".snniiiinnn"},
{"name":"GetEntArrayByName_Expensive","returnType":32,"helpText":"Get array of entities matching a name","argTypes":"string name","returnTypeString":"array< entity >"},
{"name":"GetEntArrayByNameWildCard_Expensive","returnType":32,"helpText":"Get array of entities matching a name with support for *","argTypes":"string name","returnTypeString":"array< entity >"},
{"name":"GetEntArrayByClass_Expensive","returnType":32,"helpText":"Get array of entities matching a class","argTypes":"string classname","returnTypeString":"array< entity >"},
{"name":"GetEntArrayByClassWildCard_Expensive","returnType":32,"helpText":"Get array of entities matching a class with support for *","argTypes":"string classname","returnTypeString":"array< entity >"},
{"name":"GetEntArrayByScriptName","returnType":32,"helpText":"Get array of entities matching a script name","argTypes":"string name","returnTypeString":"array< entity >"},
{"name":"GetEntArrayByScriptNameInInstance","returnType":32,"helpText":"Get array of entities matching a script name and instance","argTypes":"string scriptName, string instanceName","returnTypeString":"array< entity >"},
{"name":"GetEntByScriptName","returnType":13,"helpText":"Get entity matching the given script name. It will script error if no entity is found or more than one entity is found."},
{"name":"GetEntByScriptNameInInstance","returnType":13,"helpText":"Get entity matching the given script name and instance. It will script error if no entity is found or more than one entity is found."},
{"name":"GetWeaponArray","returnType":32,"helpText":"Get weapons in the world","argTypes":"bool onlyNotOwned","returnTypeString":"array< entity >"},
{"name":"CreateWeaponEntityByName","returnType":13,"helpText":"Create a weapon entity."},
{"name":"CreateWeaponEntityByNameConstrained","returnType":13,"helpText":"Create a constrained weapon entity that will stay in place at spawn."},
{"name":"CreateWeaponEntityByNameWithPhysics","returnType":13,"helpText":"Create a constrained weapon entity that will move at spawn."},
{"name":"CreateScriptManagedEntArray","returnType":5,"helpText":"Return array ID index"},
{"name":"AddToScriptManagedEntArray","returnType":0,"helpText":"Add an entity to script managed array"},
{"name":"RemoveFromScriptManagedEntArray","returnType":0,"helpText":"Remove entity from script managed array"},
{"name":"GetScriptManagedEntArrayLen","returnType":5,"helpText":"Get the size of the script managed ent array"},
{"name":"GetScriptManagedEntArray","returnType":32,"helpText":"Get the script managed ent array for the given index","argTypes":"int index","returnTypeString":"array< entity >"},
{"name":"GetScriptManagedEntArrayWithinCenter","returnType":32,"helpText":"Get the script managed ent array for the given index within distance of a point","argTypes":"int index, int notTeam, vector origin, float dist","returnTypeString":"array< entity >"},
{"name":"SpawnPoints_SetRatingMultipliers_Enemy","returnType":0,"helpText":"For a class, set enemy rating multipliers for titan, pilot, ai"},
{"name":"SpawnPoints_SetRatingMultipliers_Friendly","returnType":0,"helpText":"For a class, set friendly rating multipliers for titan, pilot, ai"},
{"name":"SpawnPoints_SetRatingMultiplier_PetTitan","returnType":0,"helpText":"Set pet Titan rating multiplier"},
{"name":"SpawnPoints_GetPilot","returnType":32,"helpText":"Get pilot spawn points","argTypes":"","returnTypeString":"array< entity >"},
{"name":"SpawnPoints_GetTitan","returnType":32,"helpText":"Get titan spawn points","argTypes":"","returnTypeString":"array< entity >"},
{"name":"SpawnPoints_GetDropPod","returnType":32,"helpText":"Get droppod spawn points","argTypes":"","returnTypeString":"array< entity >"},
{"name":"SpawnPoints_GetPilotStart","returnType":32,"helpText":"Get pilot start spawn points for a team","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"SpawnPoints_GetTitanStart","returnType":32,"helpText":"Get titan start spawn points for a team","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"SpawnPoints_GetDropPodStart","returnType":32,"helpText":"Get droppod start spawn points for a team","argTypes":"int team","returnTypeString":"array< entity >"},
{"name":"SpawnPoints_SortPilot","returnType":0,"helpText":"Sort spawn points for pilot"},
{"name":"SpawnPoints_SortTitan","returnType":0,"helpText":"Sort spawn points for titan"},
{"name":"SpawnPoints_SortDropPod","returnType":0,"helpText":"Sort spawn points for droppod"},
{"name":"SpawnPoints_SortPilotStart","returnType":0,"helpText":"Sort start spawn points for pilot"},
{"name":"SpawnPoints_SortTitanStart","returnType":0,"helpText":"Sort start spawn points for titan"},
{"name":"SpawnPoints_SortDropPodStart","returnType":0,"helpText":"Sort start spawn points for droppod"},
{"name":"SpawnPoints_InitRatings","returnType":0,"helpText":"Initialize rating spawn points"},
{"name":"SpawnPoints_DiscardRatings","returnType":0,"helpText":"End rating spawn points without sorting"},
{"name":"SpawnPoints_InitFrontlineData","returnType":0,"helpText":"Initialize rating spawn points for frontlines"},
{"name":"AssertNoPlayerChildren","returnType":0,"helpText":"Check the given entity has no player childrens attached. If so, it will raise a script error."},
{"name":"TryClearParent","returnType":0,"helpText":"Tell code to try clear the move parent for the given entity, even if the entity is currently marked for deletion. This is a hack for shipping only and should not be used."},
{"name":"CalculateHashForString","returnType":5,"helpText":""},
{"name":"ShouldDoReplayIsForcedByCode","returnType":6,"helpText":"Returns the value of tweak var 'replay_forced'."},
{"name":"SetVisibleEntitiesInConeQueriableEnabled","returnType":0,"helpText":"Given (entity, enabled) should this entity be a candidate to be returned from FindVisibleEntitiesInCone"},
{"name":"SetCrosshairTeamColoringDisabled","returnType":0,"helpText":"Given (entity, disabled) should this entity be disabled from doing team color crosshair logic"},
{"name":"SetForceDrawWhileParented","returnType":0,"helpText":"Force entity to be drawn while parented even to first person player"},
{"name":"SetHideOnCloak","returnType":0,"helpText":"Fully hide when cloaked"},
{"name":"SetCustomSmartAmmoTarget","returnType":0,"helpText":"Sets an entity to be a smart ammo target."},
{"name":"SetPreventSmartAmmoLock","returnType":0,"helpText":"Whether an entity is immune to smart ammo lock or not"},
{"name":"SetSmartAmmoLockFromTitansOnly","returnType":0,"helpText":"Whether an entity is immune to smart ammo lock from humans"},
{"name":"NoteMatchState","returnType":0,"helpText":"( MATCHPHASE_?, maxRounds, roundsIMC, roundsMilitia, timeLimit, timePassed, maxScore, scoreIMC, scoreMilitia )"},
{"name":"NoteLobbyState","returnType":0,"helpText":"( countdownRemaining [< 0 if no countdown] )"},
{"name":"IsHighPerfDevServer","returnType":6,"helpText":"Is high performance dev server"},
{"name":"LogPlayerMatchStat_KilledAPilot","returnType":0,"helpText":""},
{"name":"LogPlayerMatchStat_Death","returnType":0,"helpText":""},
{"name":"LogPlayerMatchStat_EarnedXP","returnType":0,"helpText":""},
{"name":"LogPlayerMatchStat_UsedBurncard","returnType":0,"helpText":""},
{"name":"LogPlayerMatchStat_HappyHourMeritsGiven","returnType":0,"helpText":""},
{"name":"ShouldAwardHappyHourBonus","returnType":6,"helpText":""},
{"name":"LogPlayerStat_BurncardDiscard","returnType":0,"helpText":""},
{"name":"SendAllPlayersBackToPartyScreen","returnType":0,"helpText":"Send all players on the server back to the party server / screen"},
{"name":"Explosion","returnType":0,"helpText":"Creates an explosion. Does damage in an area, moves physics objects, plays effects. Explosion( center, attacker, inflictor, damage, damageHeavyArmor, innerRadius, outerRadius, flags, projectileLaunchOrigin, explosionForce, scriptDamageFlags, scriptDamageSourceIdentifier, impactEffectTableName )"},
{"name":"Explosion_DamageDefSimple","returnType":0,"helpText":"Creates an explosion. Does damage in an area, moves physics objects, plays effects. Explosion_DamageDefSimple( damageDefID, center, attacker, inflictor, projectileLaunchOrigin )"},
{"name":"Explosion_DamageDef","returnType":0,"helpText":"Same as Explosion_DamageDefSimple but specify damage and radius. Explosion_DamageDef( damageDefID, center, attacker, inflictor, damage, damageHeavyArmor, innerRadius, outerRadius, projectileLaunchOrigin )"},
{"name":"RadiusDamage","returnType":0,"helpText":"Does silent, invisible damage in a spherical area. RadiusDamage( center, attacker, inflictor, damage, damageHeavyArmor, innerRadius, outerRadius, flags, distanceFromAttacker, explosionForce, scriptDamageFlags, scriptDamageSourceIdentifier )"},
{"name":"RadiusDamage_DamageDefSimple","returnType":0,"helpText":"Does silent, invisible damage in a spherical area. RadiusDamage_DamageDefSimple( damagedefID, center, attacker, inflictor, distanceFromAttacker )"},
{"name":"RadiusDamage_DamageDef","returnType":0,"helpText":"Same as RadiusDamage_DamageDefSimple but specify damage and radius. RadiusDamage_DamageDef( damagedefID, center, attacker, inflictor, damage, damageHeavyArmor, innerRadius, outerRadius, distanceFromAttacker )"},
{"name":"GetTeamEnt","returnType":13,"helpText":"Returns an entity representing the specified team"},
{"name":"Remote_BeginRegisteringFunctions","returnType":0,"helpText":"Begin registration of remote functions."},
{"name":"Remote_RegisterFunction","returnType":0,"helpText":"Register a function name to be used in remote calls."},
{"name":"Remote_EndRegisteringFunctions","returnType":0,"helpText":"Finish registration of remote functions."},
{"name":"Remote_CallFunction_Replay","returnType":0,"helpText":"Given a player, function name, and optional parameters, call function in client script. Then call it again if we rewind and play a kill replay. The command will not reach the client at all if called during a span of time the player skips because they were watching a replay. Allowed var types are null, bool, int, and float.","argTypes":"player, functionName, [param1], [param2], [param3], ...","returnTypeString":"void","shortArgTypes":".es"},
{"name":"Remote_CallFunction_NonReplay","returnType":0,"helpText":"Given a player, function name, and optional parameters, call function in client script. Does not get called again in replays. Allowed var types are null, bool, int, and float.","argTypes":"player, functionName, [param1], [param2], [param3], ...","returnTypeString":"void","shortArgTypes":".es"},
{"name":"Remote_CallFunction_UI","returnType":0,"helpText":"Given a player, function name, and optional parameters, call function in UI script. Allowed var types are null, bool, int, and float.","argTypes":"player, functionName, [param1], [param2], [param3], ...","returnTypeString":"void","shortArgTypes":".es"},
{"name":"LoadRecordedAnimation","returnType":32,"helpText":"Loads an anim_recording asset generated by bakery.","argTypes":"asset recordedAnimPath","returnTypeString":"var"},
{"name":"GetRecordedAnimationDuration","returnType":32,"helpText":"Returns the duration in seconds of the recorded anim.","argTypes":"var recordedAnim","returnTypeString":"float"},
{"name":"GetRecordedAnimationStartForRefPoint","returnType":32,"helpText":"Calculates the position of the first frame of the recorded animation if it were played so that its reference origin/angles line up with the given origin/angles.","argTypes":"var recordedAnim, vector refOrg, vector refAng","returnTypeString":"vector"},
{"name":"SaveGame_Create","returnType":0,"helpText":"Do a save,  SaveGame_Create( string saveName, int saveVersion, int start_point ) "},
{"name":"SaveGame_CreateWithCommitDelay","returnType":0,"helpText":"Do a save,  SaveGame_Create( string saveName, int saveVersion, float delay, int trycount ) , will call back  'bool CodeCallback_SaveGameIsSafeToCommit()' to validate it is ok to commit the save file."},
{"name":"SaveGame_Commit","returnType":0,"helpText":"If their is an outstanding save commit, accept it asap."},
{"name":"SaveGame_Reject","returnType":0,"helpText":"If their is an outstanding save commit, reject it asap."},
{"name":"SaveGame_Load","returnType":0,"helpText":"Do a restore,  SaveGame_Load( string saveName )"},
{"name":"SaveGame_IsValid","returnType":6,"helpText":"Checks if a file is ok to use. SaveGame_IsValid( string saveName )"},
{"name":"SaveGame_GetVersion","returnType":5,"helpText":"Return the script version of a save load. SaveGame_GetVersion( string saveName ) "},
{"name":"SaveGame_GetStartPoint","returnType":5,"helpText":"Return the script start point of a save load. SaveGame_GetStartPoint( string saveName )"},
{"name":"SaveGame_GetMapName","returnType":33,"helpText":"Return the map name of a save load. SaveGame_GetMapName( string saveName ) "},
{"name":"ChangeLevel","returnType":32,"helpText":"Loads a new level. The data in transitionStruct can be read in the next level with GetLevelTransitionStruct().","argTypes":"string mapname, LevelTransitionStruct transitionStruct","returnTypeString":"void"},
{"name":"GetLevelTransitionStruct","returnType":32,"helpText":"Reads the transition data set by ChangeLevel() on the previous map. Returns null if this is the first map or the previous map didn't supply any data.","argTypes":"","returnTypeString":"LevelTransitionStruct ornull"},
{"name":"PutEntityInSafeSpot","returnType":6,"helpText":"Tries to put an entity into a position not in solid, given a desired 'end' position. Returns true if successful. If you don't have a safeStartingLocationForEntity, just set it the same as the end position. PutEntityInSafeSpot( entity, referenceEnt, movingGroundEnt, safeStartingLocationForEntity, positionAtEndOfAnimationForEntity )"},
{"name":"SetTimeshiftTimeOfDay_Night","returnType":0,"helpText":"","argTypes":"","returnTypeString":"void"},
{"name":"SetTimeshiftTimeOfDay_Day","returnType":0,"helpText":"","argTypes":"","returnTypeString":"void"},
{"name":"SetTimeshiftArmDeviceSkin","returnType":0,"helpText":"","argTypes":"int skinIndex","returnTypeString":"void"},
{"name":"WeaponIsPrecached","returnType":6,"helpText":"","argTypes":"string weaponName","returnTypeString":"bool"},
{"name":"ModelIsPrecached","returnType":6,"helpText":"","argTypes":"asset modelAssetName","returnTypeString":"bool"},
{"name":"CreateRope","returnType":32,"helpText":"Creates a rope between two points or entities.","argTypes":"vector start, vector end, float length = 0, entity startEnt = null, entity endEnt = null, int startAttachment = 0, int endAttachment = 0, string material = \"\", int segmentCount = 0","returnTypeString":"entity"},
{"name":"GetTeamSkill","returnType":1,"helpText":"Gets the overall skill of the given team"},
{"name":"CreatePINTelemetryHeader","returnType":32,"helpText":"","argTypes":"int versionMajor, int versionMinor, table keyValuePairs","returnTypeString":"void"},
{"name":"AddPINTelemetryEvent","returnType":32,"helpText":"","argTypes":"string eventName, table headerKeyValuePairs, table bodyKeyValuePairs","returnTypeString":"void"},
{"name":"GetPINPlatformName","returnType":33,"helpText":"Gets the platform name the way PIN likes it"},
{"name":"GetDatacenterName","returnType":33,"helpText":"Gets the name of this server's datacenter"},
{"name":"IsGameFromReload","returnType":6,"helpText":"Is this a reloaded save game?"},
{"name":"GetCPULevel","returnType":5,"helpText":"Gets the CPU level for the platform this server is running on"},
{"name":"IsEnemyTeam","returnType":6,"helpText":"","argTypes":"int teamNumber, int otherTeam","returnTypeString":"bool"},
{"name":"GetCurrentPlaylistGamemodesCount","returnType":5,"helpText":"Returns the number of gamemodes in the current playlist"},
{"name":"GetPlaylistGamemodesCount","returnType":5,"helpText":"Returns the number of gamemodes in the specified playlist"},
{"name":"GetCurrentPlaylistGamemodeByIndex","returnType":33,"helpText":"Returns the name of the gamemode at the specified index in the current playlist"},
{"name":"GetPlaylistGamemodeByIndex","returnType":33,"helpText":"Returns the name of the gamemode at the specified index in the specified playlist"},
{"name":"GetPlaylistGamemodeByIndexVar","returnType":33,"helpText":""},
{"name":"GetCurrentPlaylistGamemodeByIndexVar","returnType":33,"helpText":""},
{"name":"GetCurrentPlaylistGamemodeByIndexMapsCount","returnType":5,"helpText":"Returns the number of maps for the gamemode at the specified index in the current playlist"},
{"name":"GetPlaylistGamemodeByIndexMapsCount","returnType":5,"helpText":"Returns the number of maps for the gamemode at the specified index in the specified playlist"},
{"name":"GetCurrentPlaylistGamemodeByIndexMapByIndex","returnType":33,"helpText":"Returns the name of the map at the specified gamemode and map indices in the current playlist"},
{"name":"GetPlaylistGamemodeByIndexMapByIndex","returnType":33,"helpText":"Returns the name of the map at the specified gamemode and map indices in the specified playlist"},
{"name":"GetCurrentPlaylistMapsCount","returnType":5,"helpText":"Returns the total number of maps in current playlist"},
{"name":"GetPlaylistMapsCount","returnType":5,"helpText":"Returns the total number of maps in the specified playlist"},
{"name":"IsPrivateMatch","returnType":6,"helpText":""},
{"name":"IsCoopMatch","returnType":6,"helpText":""},
{"name":"GetLobbyTeamsShowAsBalanced","returnType":6,"helpText":""},
{"name":"DevLobbyIsFrozen","returnType":6,"helpText":""},
{"name":"GetGamemodeVarOrUseValue","returnType":33,"helpText":""},
{"name":"GetPlaylistCount","returnType":5,"helpText":"Returns the total number of playlists"},
{"name":"GetPlaylistName","returnType":32,"helpText":"Gets the name of the playlist, by index"},
{"name":"GetPlaylistVarOrUseValue","returnType":33,"helpText":"Get the value of a variable from a playlist, and if it doesn't exist, use the value passed in"},
{"name":"GetPlaylistVarOrUseValueOriginal","returnType":33,"helpText":"Get the original value of a variable from a playlist, and if it doesn't exist, use the value passed in"},
{"name":"GetCurrentPlaylistName","returnType":33,"helpText":"Get the name of the current playlist"},
{"name":"Code_GetCurrentPlaylistVar","returnType":32,"helpText":"Get the value of a variable from the current playlist"},
{"name":"Code_GetCurrentPlaylistVarOrUseValue","returnType":33,"helpText":"Get the value of a variable from the current playlist, and if it doesn't exist, use the value passed in"},
{"name":"GetCurrentPlaylistVarOrUseValueOriginal","returnType":33,"helpText":"Get the original value of a variable from the current playlist, and if it doesn't exist, use the value passed in"},
{"name":"GetMaxPlayersForPlaylistName","returnType":5,"helpText":"Gets the max players for the specified playlist"},
{"name":"GetMaxTeamsForPlaylistName","returnType":5,"helpText":"Gets the max teams for the specified playlist"},
{"name":"SetPlaylistVarOverride","returnType":0,"helpText":""},
{"name":"ClearPlaylistVarOverrides","returnType":0,"helpText":""},
{"name":"SetCurrentPlaylist","returnType":6,"helpText":"Sets the current playlist"},
{"name":"SendTrainingGauntletStatsToBackend","returnType":0,"helpText":""},
{"name":"IsMatchmakingServer","returnType":6,"helpText":"Returns true if this is a matchmaking server"},
{"name":"GetLobbyType","returnType":33,"helpText":"Returns 'party' or 'game' lobby type"},
{"name":"GetPlayerByIndex","returnType":13,"helpText":"Returns player entity n where n is in [0,maxPlayers-1]."},
{"name":"DamageDef_GetCount","returnType":5,"helpText":"Get number of damage defs defined"},
{"name":"DamageDef_GetName","returnType":33,"helpText":"Get damage def name"},
{"name":"DamageDef_GetObituary","returnType":33,"helpText":""},
{"name":"DamageDef_GetDeathProtection","returnType":6,"helpText":""},
{"name":"Dev_DamageDef_GetSettingByKeyField","returnType":35,"helpText":""},
{"name":"GameRules_GetGameMode","returnType":33,"helpText":"Get the base, game mode name"},
{"name":"GameRules_GetTeamScore","returnType":5,"helpText":"Get a team's score, given a team index."},
{"name":"GameRules_GetTeamScore2","returnType":5,"helpText":"Get a team's second score, given a team index."},
{"name":"GameRules_GetTeamKills","returnType":5,"helpText":"Get a team's score, given a team index."},
{"name":"GameRules_GetTeamDeaths","returnType":5,"helpText":"Get a team's score, given a team index."},
{"name":"GameRules_GetTeamName","returnType":33,"helpText":"Get a team's name, given a team index."},
{"name":"GameRules_TimeLimitEnabled","returnType":6,"helpText":"Returns true if the time limit should be enabled"},
{"name":"GameRules_AllowMatchEnd","returnType":6,"helpText":"Returns true if the match can end"},
{"name":"GameRules_GetClassMax","returnType":5,"helpText":"Get the max players allowed for a class."},
{"name":"GameRules_SetGameMode","returnType":0,"helpText":"Set the game mode"},
{"name":"GameRules_SetTeamScore","returnType":0,"helpText":"Set a team's score, given a team index and new score."},
{"name":"GameRules_SetTeamScore2","returnType":0,"helpText":"Set a team's second score, given a team index and new score."},
{"name":"GameRules_EndMatch","returnType":0,"helpText":"End the match."},
{"name":"GameRules_MarkGameStatePrematchEnding","returnType":0,"helpText":"Note that the game has started (end of prematch)."},
{"name":"GameRules_MarkGameStateWinnerDetermined","returnType":0,"helpText":"Note that a winner has been declared (start of epilogue, etc)."},
{"name":"GameRules_ChangeMap","returnType":0,"helpText":"Change to a new map"},
{"name":"GameRules_GetRecentMap","returnType":33,"helpText":"Returns the most recent maps loaded"},
{"name":"GameRules_GetRecentGameMode","returnType":33,"helpText":"Returns the most recent game modes loaded"},
{"name":"GameRules_GetRecentTeamScore","returnType":5,"helpText":"Returns the most recent team scores"},
{"name":"GameRules_EnableGlobalChat","returnType":0,"helpText":"Set whether you want everyone to hear everyone else"},
{"name":"GameRules_GetUniqueMatchID","returnType":33,"helpText":"Gets the unique ID for this match"},
{"name":"GameRules_SetDeadPlayersCanOnlySpeakToDeadPlayersInHudChat","returnType":0,"helpText":"Set if dead players can only text chat with other dead players"},
{"name":"MarkTeamsAsBalanced_On","returnType":0,"helpText":""},
{"name":"MarkTeamsAsBalanced_Off","returnType":0,"helpText":""},
{"name":"SendPlayersToPartyScreen","returnType":0,"helpText":"Sends a group of players off to the party screen, possibly by allocating a server first","argTypes":"","returnTypeString":"void","shortArgTypes":".."},
{"name":"BeginPrivateMatchSearchForPlayer","returnType":0,"helpText":""},
{"name":"MatchmakePlayer","returnType":0,"helpText":"Find a match for this player"},
{"name":"AbortMatchSearchesForPlayer","returnType":0,"helpText":""},
{"name":"SetMaxActivityMode","returnType":0,"helpText":"Set max activity mode on the server (0,1,2)"},
{"name":"DamageInfo_GetAttacker","returnType":13,"helpText":"Return the attacker that inflicted this damage"},
{"name":"DamageInfo_GetInflictor","returnType":13,"helpText":"Return the entity that inflicted this damage (projectile, etc...)"},
{"name":"DamageInfo_GetWeapon","returnType":13,"helpText":"Return the weapon that the attacker was using"},
{"name":"DamageInfo_GetForceKill","returnType":6,"helpText":"Return whether this damage should force a kill"},
{"name":"DamageInfo_GetDamage","returnType":1,"helpText":"Return the amount of damage"},
{"name":"DamageInfo_GetDamageCriticalHitScale","returnType":1,"helpText":"Gets the scale that critical hit damage should be multiplied by."},
{"name":"DamageInfo_GetDamagePosition","returnType":3,"helpText":"Gets the world position where the damage was dealt"},
{"name":"DamageInfo_GetHitGroup","returnType":5,"helpText":"Get the section group being damaged"},
{"name":"DamageInfo_GetHitBox","returnType":5,"helpText":"Get the section being damaged"},
{"name":"DamageInfo_GetDeathPackage","returnType":33,"helpText":"Returns what death package you have set, if any."},
{"name":"DamageInfo_GetDamageType","returnType":5,"helpText":"Gets the code damage type"},
{"name":"DamageInfo_GetCustomDamageType","returnType":5,"helpText":"Gets the damage type that was set by script when firing the weapon."},
{"name":"DamageInfo_GetDamageSourceIdentifier","returnType":5,"helpText":"Gets the damage source identifier that was set by script when this damage mechanism was created."},
{"name":"DamageInfo_GetViewPunchMultiplier","returnType":1,"helpText":"Gets the view punch multiplier"},
{"name":"DamageInfo_GetDistFromAttackOrigin","returnType":1,"helpText":"Get the distance from where the bullet/projectile was fired."},
{"name":"DamageInfo_GetDistFromExplosionCenter","returnType":1,"helpText":"If it's a radius damage, gives the distance from the center of the blast. Otherwise defaults to zero."},
{"name":"DamageInfo_GetDamageForce","returnType":3,"helpText":"Get damage force vector."},
{"name":"DamageInfo_IsRagdollAllowed","returnType":6,"helpText":"Checks if code is allowing this entity to ragdoll on death"},
{"name":"DamageInfo_GetDamageFlags","returnType":5,"helpText":"Get all DAMAGEFLAG_* flags."},
{"name":"DamageInfo_HasDamageFlags","returnType":6,"helpText":"Returns true if contains all given DAMAGEFLAG_* flags."},
{"name":"DamageInfo_GetDamageWeaponName","returnType":32,"helpText":"Returns weapon name, even if weapon entity is gone"},
{"name":"DamageInfo_ShouldRecordStatsForWeapon","returnType":6,"helpText":"Returns if stats should be recorded for damage weapon"},
{"name":"DamageInfo_SetForceKill","returnType":0,"helpText":"Sets whether this damage should force a kill"},
{"name":"DamageInfo_SetDamage","returnType":0,"helpText":"Set the amount of damage"},
{"name":"DamageInfo_SetCustomDamageType","returnType":0,"helpText":"Overrides the damage type that was set by script when firing the weapon."},
{"name":"DamageInfo_AddCustomDamageType","returnType":0,"helpText":"Add damage flag."},
{"name":"DamageInfo_RemoveCustomDamageType","returnType":0,"helpText":"Remove damage flag."},
{"name":"DamageInfo_SetDamageSourceIdentifier","returnType":0,"helpText":"Sets the damage source identifier."},
{"name":"DamageInfo_SetDeathPackage","returnType":0,"helpText":"Set what death (anim) package to use if this damage kills the guy."},
{"name":"DamageInfo_SetDamageForce","returnType":0,"helpText":"Set damage force vector."},
{"name":"DamageInfo_SetFlinchDirection","returnType":0,"helpText":"Set which direction the target should flinch in."},
{"name":"DamageInfo_AddDamageFlags","returnType":0,"helpText":"Add a DAMAGEFLAG_* flag."},
{"name":"AINFileIsUpToDate","returnType":6,"helpText":"Returns true if the map's AIN file is up-to-date."},
{"name":"AINExists","returnType":6,"helpText":"Returns AIN file exists"},
{"name":"NPCSetSearchPathUseDist","returnType":0,"helpText":"Set the maximum distance for considering search paths"},
{"name":"NPCGetSearchPathUseDist","returnType":1,"helpText":"Get the maximum distance for considering search paths"},
{"name":"NPCSetAimConeFocusParams","returnType":0,"helpText":"Sets how long it takes AI cone to focus to values in weapon settings, and how much to increase cone by when not focused"},
{"name":"NPCSetAimPatternFocusParams","returnType":0,"helpText":"Sets how long it takes AI spread pattern to focus to values in weapon settings, and also for when the AI is not in players FOV, and multiplier for not in FOV"},
{"name":"NPCSetReacquireParams","returnType":0,"helpText":"Sets how long it takes AI to not see enemy before considering enemy to be reacquired. Set time to prevent reacquire if AI has been suppressing enemy"},
{"name":"NPCSetSquadNoFlankThreshold","returnType":0,"helpText":"Sets distance and member percent fraction (0 - 1) for not using flanking"},
{"name":"CreateNPCSquad","returnType":0,"helpText":"Creates an empty NPC Squad"},
{"name":"GetNearestNodeToPos","returnType":5,"helpText":"Gets the nearest node to a position"},
{"name":"GetBestNodeForPosInWedge","returnType":5,"helpText":"Gets the best node in a wedge shape, taking distance from a given point into account, that has the given script data bits set"},
{"name":"GetNodePos","returnType":3,"helpText":"Gets the position of a node"},
{"name":"GetNodeCount","returnType":5,"helpText":"Gets the number of nodes in the level"},
{"name":"GetNodeScriptData_Boolean","returnType":6,"helpText":"Returns boolean data on an AI node at a given slot"},
{"name":"SetNodeScriptData_Boolean","returnType":0,"helpText":"Sets boolean data on an AI node at a given slot"},
{"name":"GetAINScriptVersion","returnType":5,"helpText":"Returns what the currently loaded AINs script version is"},
{"name":"SetAINScriptVersion","returnType":0,"helpText":"Sets what the currently loaded AINs script version is for later serialization to file"},
{"name":"NavMesh_IsUpToDate","returnType":6,"helpText":"Returns true if the map's navmesh is up-to-date."},
{"name":"NavMesh_ClampPointForAI","returnType":32,"helpText":"Clamps a goal point to the NavMesh for a given AI. Uses AIs hull size as test extents","argTypes":"vector pointToClamp, entity contextAI","returnTypeString":"vector ornull"},
{"name":"NavMesh_ClampPointForAIWithExtents","returnType":32,"helpText":"Clamps a goal point to the NavMesh for a given AI. As extents increase in size more possible clamp positions become available, but too large and the clamped position may be very far from the original point","argTypes":"vector pointToClamp, entity contextAI, vector extents","returnTypeString":"vector ornull"},
{"name":"NavMesh_ClampPointForHull","returnType":32,"helpText":"Clamps a goal point to the NavMesh for a given hull","argTypes":"vector pointToClamp, int hull","returnTypeString":"vector ornull"},
{"name":"NavMesh_ClampPointForHullWithExtents","returnType":32,"helpText":"Clamps a goal point to the NavMesh for a given hull. As extents increase in size more possible clamp positions become available, but too large and the clamped position may be very far from the original point","argTypes":"vector pointToClamp, int hull, vector extents","returnTypeString":"vector ornull"},
{"name":"NavMesh_GetNeighborPositions","returnType":32,"helpText":"Get nearby ground positions by following the NavMesh graph","argTypes":"vector startPos, int hull, int numPositionsRequested","returnTypeString":"array< vector >"},
{"name":"NavMesh_RandomPositions","returnType":32,"helpText":"Get n ( < 64) ground positions around a spot within minDist and maxDist","argTypes":"vector startPos, int hull, int numPositionsRequested, float minDist, float maxDist","returnTypeString":"array< vector >"},
{"name":"NavMesh_RandomPositions_LargeArea","returnType":32,"helpText":"Get upto n ground positions around a spot within minDist and maxDist. Gets center of random polygons","argTypes":"vector startPos, int hull, int numPositionsRequested, float minDist, float maxDist","returnTypeString":"array< vector >"},
{"name":"NavMesh_IsPosReachableForAI","returnType":6,"helpText":"Return if a position is reachable for an AI from it's current position. Only checks static pathing."},
{"name":"GetBoundsMin","returnType":3,"helpText":"Get minimum bounds for a HULL type"},
{"name":"GetBoundsMax","returnType":3,"helpText":"Get maximum bounds for a HULL type"},
{"name":"GetNPCSquadSize","returnType":5,"helpText":"Gets the number of members in a squad"},
{"name":"SetNPCSquadMode","returnType":0,"helpText":"Set squad mode"},
{"name":"GetNPCArrayBySquad","returnType":32,"helpText":"Get array of all NPCs of squad","argTypes":"string squadname","returnTypeString":"array< entity >"},
{"name":"UpdateEnemyMemoryFromTeammates","returnType":0,"helpText":"Get a dump of enemies from all teammate AI"},
{"name":"UpdateEnemyMemoryWithinRadius","returnType":0,"helpText":"Get all enemy information within radius"},
{"name":"SetEnableNPCs","returnType":0,"helpText":"Enable or disable AI in the level"},
{"name":"ToggleNPCPathsForEntity","returnType":0,"helpText":"Enable or disable pathing for collision of an entity"},
{"name":"ToggleNPCPathsForEntityAtPosition","returnType":0,"helpText":"Enable or disable pathing for collision of an entity at a given position"},
{"name":"TransitionNPCPathsForEntity","returnType":0,"helpText":"Transition pathing from moving collision to end state of the moving collision or vice versa"},
{"name":"SkitSetDistancesToClosestHarpoints","returnType":0,"helpText":"Initialize distance to nearest hard point"},
{"name":"GetSkitNodeArray_NearPlayers","returnType":32,"helpText":"Get skit nodes sorted by nearest to average player position with some randomization","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetSkitNodeArray_NearHardpoints","returnType":32,"helpText":"Get skit nodes sorted by nearest to hardpoints with some randomization","argTypes":"","returnTypeString":"array< entity >"},
{"name":"GetSkitNodeArray_NearPos","returnType":32,"helpText":"Get skit nodes sorted by nearest to pos with some randomization","argTypes":"","returnTypeString":"array< entity >"},
{"name":"AI_CreateDangerousArea","returnType":32,"helpText":"Create a known dangerous area that AI should avoid if necessary. The lifetime of the danger is tied to an entity","argTypes":"entity lifetimeEnt, entity weaponOrProjectile, float radius, int safeTeam, bool affectsNormalArmor, bool affectsHeavyArmor","returnTypeString":"void"},
{"name":"AI_CreateDangerousArea_Static","returnType":32,"helpText":"Same as AI_CreateDangerousArea except the origin is always in a single place","argTypes":"entity lifetimeEnt, entity weaponOrProjectile, float radius, int safeTeam, bool affectsNormalArmor, bool affectsHeavyArmor, vector staticOrigin","returnTypeString":"void"},
{"name":"AI_CreateDangerousArea_DamageDef","returnType":0,"helpText":"Create dangerous area using damage def","argTypes":"int damageDef, entity lifetimeEnt, int safeTeam, bool affectsNormalArmor, bool affectsHeavyArmor","returnTypeString":"void"},
{"name":"Weapon_SetDespawnTime","returnType":0,"helpText":"Dropped weapons disappear after this much time"},
{"name":"SmartAmmo_SetCustomFractionSource","returnType":0,"helpText":"Set a source for a lock-on warning"},
{"name":"SmartAmmo_ClearCustomFractionSource","returnType":0,"helpText":"Clear a source for a lock-on warning. Pass in null for target player to clear all lock-on warnings for the given source."},
{"name":"SmartAmmo_GetCustomFractionSource","returnType":1,"helpText":"Get the current fraction value for the given source and target"},
{"name":"CreateTurretEnt","returnType":13,"helpText":"","argTypes":"vector origin, vector angles, entity ownerEnt, asset turretModel, string turretSettingsName","returnTypeString":"entity"},
{"name":"CreateControlPanelEnt","returnType":13,"helpText":"","argTypes":"vector origin, vector angles, entity ownerEnt, asset model","returnTypeString":"entity"},
{"name":"GetSpawnerArrayByClassName","returnType":32,"helpText":"Get array of spawners matching a class name","argTypes":"string name","returnTypeString":"array< entity >"},
{"name":"GetSpawnerArrayByScriptName","returnType":32,"helpText":"Get array of spawners matching a script name","argTypes":"string name","returnTypeString":"array< entity >"},
{"name":"GetSpawnerByScriptName","returnType":13,"helpText":"Get spawner matching the given script name. It will script error if no spawner is found or more than one entity is found."}]}


}